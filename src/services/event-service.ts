/** File Hash: 27c95e466d8c3d6c6f497cd7ee77f99b4b61d91f774a823856fab88a06052d51 */

/** Autogenerated Code - Do Not Touch */
/* eslint-disable */

import { useService } from './service';
import type { EventCreate } from "@/dtos/event/event-create"
import type { EventDetail } from "@/dtos/event/event-detail"
import type { Page } from "@/dtos/page"
import type { Pagination } from "@/dtos/pagination"
import type { EventSearch } from "@/dtos/event/event-search"
import type { EventTopTen } from "@/dtos/event/event-top-ten"

export function useEventService() {
  const basePath = `api/v1/events`;
  const { api, filterSearchParams } = useService(basePath);
  
  async function create(newEventCreateDto: EventCreate): Promise<EventDetail> {
    return api.post(``, { json: newEventCreateDto }).json();
  }
  async function findByArtistId(artistId: number, pageDto: Page): Promise<Pagination<EventDetail>> {
    return api.get(``, { searchParams: filterSearchParams([['artistId', artistId], ['pageSize', pageDto.pageSize], ['pageIndex', pageDto.pageIndex]]) }).json();
  }
  async function findByFilters(searchDto: EventSearch, page: Page): Promise<Pagination<EventDetail>> {
    return api.get(``, { searchParams: filterSearchParams([['pageSize', page.pageSize], ['description', searchDto.description], ['title', searchDto.title], ['duration', searchDto.duration], ['type', searchDto.type], ['pageIndex', page.pageIndex]]) }).json();
  }
  async function findById(id: number): Promise<EventDetail> {
    return api.get(`${id}`).json();
  }
  async function findTopTen(type: EventTopTen): Promise<EventDetail[]> {
    return api.get(`top`, { searchParams: filterSearchParams([['type', type.type]]) }).json();
  }
  return {
    create,
    findByArtistId,
    findByFilters,
    findById,
    findTopTen,
  };
}
