/** File Hash: f9615d23f9267adfcbfa0a222b3bc417dcc9e52439414516ae80f720745b2d01 */

/** Autogenerated Code - Do Not Touch */
/* eslint-disable */

import { useService } from './service';
import type { NewsCreate } from "@/dtos/news/news-create"
import type { NewsDetail } from "@/dtos/news/news-detail"
import type { Page } from "@/dtos/page"
import type { NewsSearch } from "@/dtos/news/news-search"
import type { Pagination } from "@/dtos/pagination"

export function useNewsService() {
  const basePath = `api/v1/news`;
  const { api, filterSearchParams } = useService(basePath);
  
  async function create(newsCreateDto: NewsCreate): Promise<NewsDetail> {
    return api.post(``, { json: newsCreateDto }).json();
  }
  async function findAll(page: Page, newsSearchDto: NewsSearch): Promise<Pagination<NewsDetail>> {
    return api.get(``, { searchParams: filterSearchParams([['eventType', newsSearchDto.eventType], ['pageSize', page.pageSize], ['to', newsSearchDto.to], ['read', newsSearchDto.read], ['content', newsSearchDto.content], ['from', newsSearchDto.from], ['pageIndex', page.pageIndex], ['eventTitle', newsSearchDto.eventTitle]]) }).json();
  }
  async function findOne(id: number): Promise<NewsDetail> {
    return api.get(`${id}`).json();
  }
  async function findUserNews(page: Page, newsSearchDto: NewsSearch): Promise<Pagination<NewsDetail>> {
    return api.get(`user`, { searchParams: filterSearchParams([['eventType', newsSearchDto.eventType], ['pageSize', page.pageSize], ['to', newsSearchDto.to], ['read', newsSearchDto.read], ['content', newsSearchDto.content], ['from', newsSearchDto.from], ['pageIndex', page.pageIndex], ['eventTitle', newsSearchDto.eventTitle]]) }).json();
  }
  async function markNewsAsRead(id: number): Promise<void> {
    await api.post(`${id}`)
  }
  return {
    create,
    findAll,
    findOne,
    findUserNews,
    markNewsAsRead,
  };
}
